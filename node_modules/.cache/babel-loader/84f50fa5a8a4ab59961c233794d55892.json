{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\ReyAlex\\\\Documents\\\\GitHub\\\\desafio3practicodps\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\ReyAlex\\\\Documents\\\\GitHub\\\\desafio3practicodps\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ReyAlex\\\\Documents\\\\GitHub\\\\desafio3practicodps\\\\src\\\\Components\\\\AlumnosForm.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { db } from \"../firebase\"; //import { toast } from \"react-toastify\";\n\nconst AlumnosForm = props => {\n  const initialStateValues = {\n    nombre: \"\",\n    nota1: \"\",\n    nota2: \"\",\n    nota3: \"\",\n    nota4: \"\",\n    nota5: \"\",\n    promedio: \"\",\n    estado: \"\",\n    Maximo: 0,\n    Minimo: 0,\n    arreglo: []\n  };\n\n  const _useState = useState(initialStateValues),\n        _useState2 = _slicedToArray(_useState, 2),\n        values = _useState2[0],\n        setValues = _useState2[1];\n\n  const handleInputChange = e => {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    setValues(_objectSpread({}, values, {\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); //Sacando el promedio\n\n    values.promedio = (parseInt(values.nota1) + parseInt(values.nota2) + parseInt(values.nota3) + parseInt(values.nota4) + parseInt(values.nota5)) / parseInt(5); //Estado reprobado, regular, aprobado \n\n    if (parseInt(values.promedio) >= parseInt(7)) {\n      values.estado = \"Aprobado\";\n    } else if (parseInt(values.promedio) >= parseInt(4) && parseInt(values.promedio) < parseInt(7)) {\n      values.estado = \"Regular\";\n    } else if (parseInt(values.promedio) < parseInt(4)) {\n      values.estado = \"Reprobado\";\n    } //\n\n\n    arreglo = [values.promedio];\n\n    for (var i = 0, len = arreglo.length; i < len; i++) {\n      if (maximo < arreglo[i]) {\n        maximo = arreglo[i];\n      }\n    }\n\n    props.addOrEditEmpleado(values);\n    setValues(_objectSpread({}, initialStateValues));\n  };\n\n  const getEmpleadoById = async id => {\n    const doc = await db.collection(\"Empleados\").doc(id).get();\n    setValues(_objectSpread({}, doc.data()));\n  };\n\n  useEffect(() => {\n    if (props.currentId === \"\") {\n      setValues(_objectSpread({}, initialStateValues));\n    } else {\n      //https://stackoverflow.com/questions/56059127/how-to-fix-this-error-function-collectionreference-doc\n      if (props.currentId !== null && props.currentId !== undefined) {\n        getEmpleadoById(props.currentId);\n      }\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [props.currentId]);\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"card card-body border-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-group-text bg-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"contact_page\")), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Ingrese nombre\",\n    value: values.nombre,\n    name: \"nombre\",\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-group-text bg-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"exposure\")), React.createElement(\"input\", {\n    type: \"number\",\n    value: values.nota1,\n    name: \"nota1\",\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-group-text bg-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"exposure\")), React.createElement(\"input\", {\n    type: \"number\",\n    value: values.nota2,\n    name: \"nota2\",\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-group-text bg-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"exposure\")), React.createElement(\"input\", {\n    type: \"number\",\n    value: values.nota3,\n    name: \"nota3\",\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-group-text bg-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"exposure\")), React.createElement(\"input\", {\n    type: \"number\",\n    value: values.nota4,\n    name: \"nota4\",\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-group-text bg-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"exposure\")), React.createElement(\"input\", {\n    type: \"number\",\n    value: values.nota5,\n    name: \"nota5\",\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, props.currentId === \"\" ? \"Guardar\" : \"Actualizar\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, Value.Maximo));\n};\n\nexport default AlumnosForm;","map":{"version":3,"sources":["C:/Users/ReyAlex/Documents/GitHub/desafio3practicodps/src/Components/AlumnosForm.jsx"],"names":["React","useState","useEffect","db","AlumnosForm","props","initialStateValues","nombre","nota1","nota2","nota3","nota4","nota5","promedio","estado","Maximo","Minimo","arreglo","values","setValues","handleInputChange","e","target","name","value","handleSubmit","preventDefault","parseInt","i","len","length","maximo","addOrEditEmpleado","getEmpleadoById","id","doc","collection","get","data","currentId","undefined","Value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { db } from \"../firebase\";\r\n//import { toast } from \"react-toastify\";\r\n\r\nconst AlumnosForm = (props) => {\r\n\r\n  const initialStateValues = {\r\n    nombre: \"\",\r\n    nota1: \"\",\r\n    nota2: \"\",\r\n    nota3: \"\",\r\n    nota4: \"\",\r\n    nota5: \"\",\r\n    promedio: \"\",\r\n    estado: \"\",\r\n    Maximo: 0,\r\n    Minimo: 0,\r\n    arreglo: [],\r\n  };\r\n\r\n  const [values, setValues] = useState(initialStateValues);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    //Sacando el promedio\r\n    values.promedio = (parseInt(values.nota1) + parseInt(values.nota2) + parseInt(values.nota3) +\r\n      parseInt(values.nota4) + parseInt(values.nota5)) / (parseInt(5))\r\n    //Estado reprobado, regular, aprobado \r\n    if (parseInt(values.promedio) >= parseInt(7)) {\r\n      values.estado = \"Aprobado\";\r\n    } else if (parseInt(values.promedio) >= parseInt(4) && parseInt(values.promedio) < parseInt(7)) {\r\n      values.estado = \"Regular\";\r\n    } else if (parseInt(values.promedio) < parseInt(4)) {\r\n      values.estado = \"Reprobado\";\r\n    }\r\n\r\n    //\r\n    arreglo = [values.promedio];\r\n\r\n    for (var i = 0, len = arreglo.length; i < len; i++) {\r\n      if (maximo < arreglo[i]) {\r\n        maximo = arreglo[i]\r\n      }\r\n    }\r\n\r\n    props.addOrEditEmpleado(values);\r\n    setValues({ ...initialStateValues });\r\n  };\r\n\r\n  const getEmpleadoById = async (id) => {\r\n    const doc = await db.collection(\"Empleados\").doc(id).get();\r\n    setValues({ ...doc.data() });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.currentId === \"\") {\r\n      setValues({ ...initialStateValues });\r\n    } else {\r\n      //https://stackoverflow.com/questions/56059127/how-to-fix-this-error-function-collectionreference-doc\r\n      if (props.currentId !== null && props.currentId !== undefined) {\r\n        getEmpleadoById(props.currentId);\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props.currentId]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"card card-body border-primary\">\r\n      <div className=\"form-group input-group\">\r\n        <div className=\"input-group-text bg-light\">\r\n          <i className=\"material-icons\">contact_page</i>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Ingrese nombre\"\r\n          value={values.nombre}\r\n          name=\"nombre\"\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n      <div className=\"form-group input-group\">\r\n        <div className=\"input-group-text bg-light\">\r\n          <i className=\"material-icons\">exposure</i>\r\n        </div>\r\n        <input\r\n          type=\"number\"\r\n          value={values.nota1}\r\n          name=\"nota1\"\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n      <div className=\"form-group input-group\">\r\n        <div className=\"input-group-text bg-light\">\r\n          <i className=\"material-icons\">exposure</i>\r\n        </div>\r\n        <input\r\n          type=\"number\"\r\n          value={values.nota2}\r\n          name=\"nota2\"\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n      <div className=\"form-group input-group\">\r\n        <div className=\"input-group-text bg-light\">\r\n          <i className=\"material-icons\">exposure</i>\r\n        </div>\r\n        <input\r\n          type=\"number\"\r\n          value={values.nota3}\r\n          name=\"nota3\"\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n      <div className=\"form-group input-group\">\r\n        <div className=\"input-group-text bg-light\">\r\n          <i className=\"material-icons\">exposure</i>\r\n        </div>\r\n        <input\r\n          type=\"number\"\r\n          value={values.nota4}\r\n          name=\"nota4\"\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n      <div className=\"form-group input-group\">\r\n        <div className=\"input-group-text bg-light\">\r\n          <i className=\"material-icons\">exposure</i>\r\n        </div>\r\n        <input\r\n          type=\"number\"\r\n          value={values.nota5}\r\n          name=\"nota5\"\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n\r\n      <button className=\"btn btn-primary btn-block\">\r\n        {props.currentId === \"\" ? \"Guardar\" : \"Actualizar\"}\r\n      </button>\r\n      <label>{ Value.Maximo }</label>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AlumnosForm;"]},"metadata":{},"sourceType":"module"}